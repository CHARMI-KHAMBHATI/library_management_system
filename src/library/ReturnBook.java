/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library;

import static java.lang.String.format;
import static java.lang.String.format;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ADMIN
 */
public class ReturnBook extends javax.swing.JFrame {

    /**
     * Creates new form ReturnBook
     */
    String uid;
    public ReturnBook() {
        initComponents();
    }
    public ReturnBook(String id) {
        initComponents();
        uid=id;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        bnmTxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Enter Book Details to Return");

        jLabel2.setText("Book Name:");

        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(87, 87, 87)
                        .addComponent(jButton2))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(bnmTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(bnmTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(118, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Connection conn=null;
        PreparedStatement pst=null;
        ResultSet rs=null;
        ResultSet rs1=null;

        int rsRows;
        String bid;
        String bookName = bnmTxt.getText();
        String rdate;
        
        conn=DBClass.ConnectDB();

        System.out.println("before query");
        
        String sql="SELECT * FROM issue_details natural join book_details WHERE bname like ? and STUDENTID LIKE ?";

        try{
            pst= conn.prepareStatement(sql);
            pst.setString(1,"%"+bookName+"%");
            pst.setString(2,uid);

            rs=pst.executeQuery();

            if(rs.next()){
                rs.beforeFirst();
                rs.last();
                rsRows=rs.getRow();

                if(rsRows>1){
                    JOptionPane.showMessageDialog(this, "Multiple Results Found! Be more Specific");

                }
                else if(rsRows==1){
                    JOptionPane.showMessageDialog(this, "Results Found!\n Returning:\n"
                            + rs.getString(6));
                    // return here
                    
                    bid=rs.getString(1);
                    System.out.println(bid);
                    rdate=rs.getString(5);
                    System.out.println(rdate);
                    java.util.Date dt = new java.util.Date();
                    java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    String currentTime = sdf.format(dt);
                    
                    if(currentTime.compareTo(rdate)<=0){
                        System.out.println("no issues");
                        
                        
                    }
                    else{
                        //fine here
                        
                       String q="SELECT DATEDIFF( ?, ?)";
                       try{
                            pst= conn.prepareStatement(q);
                            pst.setString(1,currentTime);
                            pst.setString(2,rdate);

                            rs1=pst.executeQuery();
                            if(rs1.next()){
                            String diffDays=rs1.getString(1);
                            System.out.println(diffDays);
                            JOptionPane.showMessageDialog(this, "You are late\n"
                                    + "please fill the fine for "+diffDays+" days!");
                            }
                       }catch(Exception e){
                           System.out.println(e);
                           
                       }
                       
                        
                        
                         
                         
                    }
                    return_book(bid);

                }

                

            }
            else{
                System.out.println("fail");
                JOptionPane.showMessageDialog(this, "No Results Found! Try Again.\n Or Check Book Name");
            }
        }catch (SQLException ex) {
            Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        HomePage srt = new HomePage(uid);
        srt.setVisible(true);
        srt.pack();
        srt.setLocationRelativeTo(null);

        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReturnBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bnmTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

    private void return_book(String bid) {
         Connection conn;
        conn = null;
    PreparedStatement pst=null,ps1=null;
    ResultSet rs=null;
    String q;
    
    
   
       

    
       conn=DBClass.ConnectDB();
         System.out.println("before query");
        String sql="delete from issue_details where bid = ? and STUDENTID = ?";
        
        try{
        pst= conn.prepareStatement(sql);
        pst.setString(1,bid);
        pst.setString(2,uid);
        
        
        int i=pst.executeUpdate();
        
        if(i>0){
            System.out.println("success");
           JOptionPane.showMessageDialog(this, "Successfully Returned!");
           // issue success now update those tables
           
             q="UPDATE book_copies SET no_of_issued=no_of_issued-1,no_of_available=no_of_available+1 WHERE bid= ? ";
        
        try{
        ps1= conn.prepareStatement(q);
        ps1.setString(1,bid);
       int j=ps1.executeUpdate();
       if(j>0){
           System.out.println("`book_copies` success!");
           
       }
       else{
           JOptionPane.showMessageDialog(this, "Failed! Try Again.");
       }
        }   catch (SQLException ex) {
            Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
        }
           
           
        }
        else{
            System.out.println("fail");
            JOptionPane.showMessageDialog(this, "Failed! Try Again.");
        }
        }   catch (SQLException ex) {
            Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
}
